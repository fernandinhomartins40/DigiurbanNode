
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  tenantCode: 'tenantCode',
  nome: 'nome',
  cidade: 'cidade',
  estado: 'estado',
  cnpj: 'cnpj',
  plano: 'plano',
  status: 'status',
  populacao: 'populacao',
  endereco: 'endereco',
  responsavelNome: 'responsavelNome',
  responsavelEmail: 'responsavelEmail',
  responsavelTelefone: 'responsavelTelefone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  nomeCompleto: 'nomeCompleto',
  email: 'email',
  passwordHash: 'passwordHash',
  role: 'role',
  status: 'status',
  avatarUrl: 'avatarUrl',
  ultimoLogin: 'ultimoLogin',
  failedLoginAttempts: 'failedLoginAttempts',
  lockedUntil: 'lockedUntil',
  emailVerified: 'emailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  code: 'code',
  resource: 'resource',
  action: 'action',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  permissionId: 'permissionId',
  grantedBy: 'grantedBy',
  createdAt: 'createdAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tenantId: 'tenantId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.SmtpUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  email: 'email',
  passwordHash: 'passwordHash',
  name: 'name',
  isVerified: 'isVerified',
  isActive: 'isActive',
  isAdmin: 'isAdmin',
  lastLogin: 'lastLogin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailDomainScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  smtpUserId: 'smtpUserId',
  domainName: 'domainName',
  isVerified: 'isVerified',
  verificationToken: 'verificationToken',
  verifiedAt: 'verifiedAt',
  verificationMethod: 'verificationMethod',
  dkimEnabled: 'dkimEnabled',
  spfEnabled: 'spfEnabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DkimKeyScalarFieldEnum = {
  id: 'id',
  domainId: 'domainId',
  selector: 'selector',
  privateKey: 'privateKey',
  publicKey: 'publicKey',
  algorithm: 'algorithm',
  canonicalization: 'canonicalization',
  keySize: 'keySize',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  domainId: 'domainId',
  fromEmail: 'fromEmail',
  toEmail: 'toEmail',
  subject: 'subject',
  htmlContent: 'htmlContent',
  textContent: 'textContent',
  status: 'status',
  direction: 'direction',
  sentAt: 'sentAt',
  deliveredAt: 'deliveredAt',
  mxServer: 'mxServer',
  errorMessage: 'errorMessage',
  attempts: 'attempts',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SmtpConnectionScalarFieldEnum = {
  id: 'id',
  remoteAddress: 'remoteAddress',
  hostname: 'hostname',
  serverType: 'serverType',
  status: 'status',
  rejectReason: 'rejectReason',
  createdAt: 'createdAt'
};

exports.Prisma.AuthAttemptScalarFieldEnum = {
  id: 'id',
  smtpUserId: 'smtpUserId',
  username: 'username',
  remoteAddress: 'remoteAddress',
  success: 'success',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  User: 'User',
  Permission: 'Permission',
  UserPermission: 'UserPermission',
  ActivityLog: 'ActivityLog',
  SmtpUser: 'SmtpUser',
  EmailDomain: 'EmailDomain',
  DkimKey: 'DkimKey',
  Email: 'Email',
  SmtpConnection: 'SmtpConnection',
  AuthAttempt: 'AuthAttempt'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\fusea\\Desktop\\DigiurbanNode\\backend\\src\\database\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\fusea\\Desktop\\DigiurbanNode\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../../..",
  "clientVersion": "6.16.2",
  "engineVersion": "605197351a3c8bdd595af2d2a9bc3025bca48ea2",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// ====================================================================\n// üóÑÔ∏è PRISMA SCHEMA COMPLETO - DIGIURBAN + EMAIL SYSTEM\n// ====================================================================\n// Schema integrado com UltraZend SMTP Server\n// ====================================================================\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"./backend/src/database/generated/client\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\", \"linux-musl\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ====================================================================\n// MODELOS EXISTENTES DIGIURBAN\n// ====================================================================\n\nmodel Tenant {\n  id                  String    @id\n  tenantCode          String    @unique(map: \"tenants_tenant_code_unique\") @map(\"tenant_code\")\n  nome                String\n  cidade              String\n  estado              String\n  cnpj                String    @unique(map: \"tenants_cnpj_unique\")\n  plano               String?   @default(\"basico\")\n  status              String?   @default(\"ativo\")\n  populacao           Int?\n  endereco            String?\n  responsavelNome     String?   @map(\"responsavel_nome\")\n  responsavelEmail    String?   @map(\"responsavel_email\")\n  responsavelTelefone String?   @map(\"responsavel_telefone\")\n  createdAt           DateTime? @map(\"created_at\")\n  updatedAt           DateTime? @map(\"updated_at\")\n\n  // Relacionamentos existentes\n  users        User[]\n  activityLogs ActivityLog[]\n\n  // Novos relacionamentos com email\n  emailDomains EmailDomain[]\n\n  @@index([tenantCode], map: \"idx_tenants_codigo\")\n  @@index([cnpj], map: \"idx_tenants_cnpj\")\n  @@index([status], map: \"idx_tenants_status\")\n  @@map(\"tenants\")\n}\n\nmodel User {\n  id                  String    @id\n  tenantId            String?   @map(\"tenant_id\")\n  nomeCompleto        String    @map(\"nome_completo\")\n  email               String    @unique(map: \"users_email_unique\")\n  passwordHash        String    @map(\"password_hash\")\n  role                String    @default(\"user\")\n  status              String    @default(\"pendente\")\n  avatarUrl           String?   @map(\"avatar_url\")\n  ultimoLogin         DateTime? @map(\"ultimo_login\")\n  failedLoginAttempts Int?      @default(0) @map(\"failed_login_attempts\")\n  lockedUntil         DateTime? @map(\"locked_until\")\n  emailVerified       Boolean?  @default(false) @map(\"email_verified\")\n  createdAt           DateTime? @map(\"created_at\")\n  updatedAt           DateTime? @map(\"updated_at\")\n\n  // Relacionamentos existentes\n  tenant             Tenant?          @relation(fields: [tenantId], references: [id])\n  permissions        UserPermission[]\n  grantedPermissions UserPermission[] @relation(\"GrantedBy\")\n  activityLogs       ActivityLog[]\n\n  // Novos relacionamentos com email\n  smtpUsers SmtpUser[]\n\n  @@index([email], map: \"idx_users_email\")\n  @@index([tenantId], map: \"idx_users_tenant\")\n  @@index([role], map: \"idx_users_role\")\n  @@index([status], map: \"idx_users_status\")\n  @@index([ultimoLogin], map: \"idx_users_ultimo_login\")\n  @@map(\"users\")\n}\n\nmodel Permission {\n  id          Int       @id @default(autoincrement())\n  code        String    @unique(map: \"permissions_code_unique\")\n  resource    String\n  action      String\n  description String?\n  createdAt   DateTime? @map(\"created_at\")\n\n  userPermissions UserPermission[]\n\n  @@index([code], map: \"idx_permissions_code\")\n  @@index([resource], map: \"idx_permissions_resource\")\n  @@map(\"permissions\")\n}\n\nmodel UserPermission {\n  id           Int       @id @default(autoincrement())\n  userId       String    @map(\"user_id\")\n  permissionId Int       @map(\"permission_id\")\n  grantedBy    String?   @map(\"granted_by\")\n  createdAt    DateTime? @map(\"created_at\")\n\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)\n  grantor    User?      @relation(\"GrantedBy\", fields: [grantedBy], references: [id])\n\n  @@unique([userId, permissionId], map: \"user_permissions_user_id_permission_id_unique\")\n  @@index([userId], map: \"idx_user_permissions_user\")\n  @@index([permissionId], map: \"idx_user_permissions_permission\")\n  @@map(\"user_permissions\")\n}\n\nmodel ActivityLog {\n  id         Int       @id @default(autoincrement())\n  userId     String?   @map(\"user_id\")\n  tenantId   String?   @map(\"tenant_id\")\n  action     String\n  resource   String?\n  resourceId String?   @map(\"resource_id\")\n  details    String?\n  ipAddress  String?   @map(\"ip_address\")\n  userAgent  String?   @map(\"user_agent\")\n  createdAt  DateTime? @map(\"created_at\")\n\n  user   User?   @relation(fields: [userId], references: [id])\n  tenant Tenant? @relation(fields: [tenantId], references: [id])\n\n  @@index([userId], map: \"idx_activity_user\")\n  @@index([tenantId], map: \"idx_activity_tenant\")\n  @@index([action], map: \"idx_activity_action\")\n  @@map(\"activity_logs\")\n}\n\n// ====================================================================\n// NOVOS MODELOS PARA EMAIL SYSTEM (UltraZend SMTP)\n// ====================================================================\n\n// Usu√°rios SMTP (separados dos usu√°rios do sistema)\nmodel SmtpUser {\n  id           Int       @id @default(autoincrement())\n  userId       String?   @map(\"user_id\") // Link opcional com usu√°rio DigiUrban\n  email        String    @unique\n  passwordHash String    @map(\"password_hash\")\n  name         String\n  isVerified   Boolean   @default(false) @map(\"is_verified\")\n  isActive     Boolean   @default(true) @map(\"is_active\")\n  isAdmin      Boolean   @default(false) @map(\"is_admin\")\n  lastLogin    DateTime? @map(\"last_login\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n  updatedAt    DateTime  @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  user         User?         @relation(fields: [userId], references: [id], onDelete: SetNull)\n  domains      EmailDomain[]\n  authAttempts AuthAttempt[]\n\n  @@index([email])\n  @@index([isActive], map: \"idx_smtp_users_active\")\n  @@map(\"smtp_users\")\n}\n\n// Dom√≠nios de email\nmodel EmailDomain {\n  id                 Int       @id @default(autoincrement())\n  tenantId           String?   @map(\"tenant_id\") // Link com tenant\n  smtpUserId         Int       @map(\"smtp_user_id\") // Usu√°rio respons√°vel\n  domainName         String    @unique @map(\"domain_name\")\n  isVerified         Boolean   @default(false) @map(\"is_verified\")\n  verificationToken  String?   @map(\"verification_token\")\n  verifiedAt         DateTime? @map(\"verified_at\")\n  verificationMethod String?   @default(\"dns\") @map(\"verification_method\")\n  dkimEnabled        Boolean   @default(true) @map(\"dkim_enabled\")\n  spfEnabled         Boolean   @default(true) @map(\"spf_enabled\")\n  createdAt          DateTime  @default(now()) @map(\"created_at\")\n  updatedAt          DateTime  @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant   Tenant?   @relation(fields: [tenantId], references: [id], onDelete: SetNull)\n  smtpUser SmtpUser  @relation(fields: [smtpUserId], references: [id], onDelete: Cascade)\n  dkimKeys DkimKey[]\n  emails   Email[]\n\n  @@index([domainName])\n  @@index([isVerified])\n  @@index([tenantId])\n  @@map(\"email_domains\")\n}\n\n// Chaves DKIM\nmodel DkimKey {\n  id               Int      @id @default(autoincrement())\n  domainId         Int      @map(\"domain_id\")\n  selector         String\n  privateKey       String   @map(\"private_key\")\n  publicKey        String   @map(\"public_key\")\n  algorithm        String   @default(\"rsa-sha256\")\n  canonicalization String   @default(\"relaxed/relaxed\")\n  keySize          Int      @default(2048) @map(\"key_size\")\n  isActive         Boolean  @default(true) @map(\"is_active\")\n  createdAt        DateTime @default(now()) @map(\"created_at\")\n  updatedAt        DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  domain EmailDomain @relation(fields: [domainId], references: [id], onDelete: Cascade)\n\n  @@unique([domainId, selector])\n  @@index([isActive])\n  @@map(\"dkim_keys\")\n}\n\n// Emails processados\nmodel Email {\n  id           Int       @id @default(autoincrement())\n  messageId    String    @unique @map(\"message_id\")\n  domainId     Int?      @map(\"domain_id\")\n  fromEmail    String    @map(\"from_email\")\n  toEmail      String    @map(\"to_email\")\n  subject      String\n  htmlContent  String?   @map(\"html_content\")\n  textContent  String?   @map(\"text_content\")\n  status       String    @default(\"PENDING\")\n  direction    String\n  sentAt       DateTime? @map(\"sent_at\")\n  deliveredAt  DateTime? @map(\"delivered_at\")\n  mxServer     String?   @map(\"mx_server\")\n  errorMessage String?   @map(\"error_message\")\n  attempts     Int       @default(0)\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n  updatedAt    DateTime  @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  domain EmailDomain? @relation(fields: [domainId], references: [id], onDelete: SetNull)\n\n  @@index([messageId])\n  @@index([fromEmail])\n  @@index([toEmail])\n  @@index([status])\n  @@index([direction])\n  @@index([sentAt])\n  @@map(\"emails\")\n}\n\n// Conex√µes SMTP\nmodel SmtpConnection {\n  id            Int      @id @default(autoincrement())\n  remoteAddress String   @map(\"remote_address\")\n  hostname      String?\n  serverType    String   @map(\"server_type\")\n  status        String\n  rejectReason  String?  @map(\"reject_reason\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n\n  @@index([remoteAddress])\n  @@index([serverType])\n  @@index([status])\n  @@index([createdAt])\n  @@map(\"smtp_connections\")\n}\n\n// Tentativas de autentica√ß√£o\nmodel AuthAttempt {\n  id            Int      @id @default(autoincrement())\n  smtpUserId    Int?     @map(\"smtp_user_id\")\n  username      String\n  remoteAddress String   @map(\"remote_address\")\n  success       Boolean\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n\n  // Relacionamentos\n  smtpUser SmtpUser? @relation(fields: [smtpUserId], references: [id], onDelete: SetNull)\n\n  @@index([username])\n  @@index([remoteAddress])\n  @@index([success])\n  @@index([createdAt])\n  @@map(\"auth_attempts\")\n}\n\n// ====================================================================\n// CONSTANTS (usando strings ao inv√©s de enums para compatibilidade SQLite)\n// ====================================================================\n// EmailStatus: \"PENDING\", \"SENT\", \"DELIVERED\", \"BOUNCED\", \"FAILED\"\n// EmailDirection: \"INBOUND\", \"OUTBOUND\"\n// SmtpServerType: \"MX\", \"SUBMISSION\"\n// ConnectionStatus: \"ACCEPTED\", \"REJECTED\", \"FAILED\"\n",
  "inlineSchemaHash": "720f6936c02063a68191dcf5f2e25830cdea349b037fa25a81c3a815dd63f816",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_code\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cidade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cnpj\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plano\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"populacao\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"endereco\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavelNome\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"responsavel_nome\"},{\"name\":\"responsavelEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"responsavel_email\"},{\"name\":\"responsavelTelefone\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"responsavel_telefone\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TenantToUser\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToTenant\"},{\"name\":\"emailDomains\",\"kind\":\"object\",\"type\":\"EmailDomain\",\"relationName\":\"EmailDomainToTenant\"}],\"dbName\":\"tenants\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"nomeCompleto\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"nome_completo\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar_url\"},{\"name\":\"ultimoLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ultimo_login\"},{\"name\":\"failedLoginAttempts\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"failed_login_attempts\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"locked_until\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_verified\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUser\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"UserToUserPermission\"},{\"name\":\"grantedPermissions\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"GrantedBy\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"smtpUsers\",\"kind\":\"object\",\"type\":\"SmtpUser\",\"relationName\":\"SmtpUserToUser\"}],\"dbName\":\"users\"},\"Permission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"userPermissions\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"PermissionToUserPermission\"}],\"dbName\":\"permissions\"},\"UserPermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"permission_id\"},{\"name\":\"grantedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"granted_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPermission\"},{\"name\":\"permission\",\"kind\":\"object\",\"type\":\"Permission\",\"relationName\":\"PermissionToUserPermission\"},{\"name\":\"grantor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GrantedBy\"}],\"dbName\":\"user_permissions\"},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_id\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ActivityLogToTenant\"}],\"dbName\":\"activity_logs\"},\"SmtpUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_admin\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SmtpUserToUser\"},{\"name\":\"domains\",\"kind\":\"object\",\"type\":\"EmailDomain\",\"relationName\":\"EmailDomainToSmtpUser\"},{\"name\":\"authAttempts\",\"kind\":\"object\",\"type\":\"AuthAttempt\",\"relationName\":\"AuthAttemptToSmtpUser\"}],\"dbName\":\"smtp_users\"},\"EmailDomain\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"smtpUserId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"smtp_user_id\"},{\"name\":\"domainName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"domain_name\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"verificationToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"verification_token\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"verified_at\"},{\"name\":\"verificationMethod\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"verification_method\"},{\"name\":\"dkimEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"dkim_enabled\"},{\"name\":\"spfEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"spf_enabled\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"EmailDomainToTenant\"},{\"name\":\"smtpUser\",\"kind\":\"object\",\"type\":\"SmtpUser\",\"relationName\":\"EmailDomainToSmtpUser\"},{\"name\":\"dkimKeys\",\"kind\":\"object\",\"type\":\"DkimKey\",\"relationName\":\"DkimKeyToEmailDomain\"},{\"name\":\"emails\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToEmailDomain\"}],\"dbName\":\"email_domains\"},\"DkimKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"domainId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"domain_id\"},{\"name\":\"selector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"privateKey\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"private_key\"},{\"name\":\"publicKey\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"public_key\"},{\"name\":\"algorithm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canonicalization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keySize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"key_size\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"domain\",\"kind\":\"object\",\"type\":\"EmailDomain\",\"relationName\":\"DkimKeyToEmailDomain\"}],\"dbName\":\"dkim_keys\"},\"Email\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"message_id\"},{\"name\":\"domainId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"domain_id\"},{\"name\":\"fromEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"from_email\"},{\"name\":\"toEmail\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"to_email\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"htmlContent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"html_content\"},{\"name\":\"textContent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"text_content\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"sent_at\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"delivered_at\"},{\"name\":\"mxServer\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mx_server\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"domain\",\"kind\":\"object\",\"type\":\"EmailDomain\",\"relationName\":\"EmailToEmailDomain\"}],\"dbName\":\"emails\"},\"SmtpConnection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remoteAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"remote_address\"},{\"name\":\"hostname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serverType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"server_type\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reject_reason\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"smtp_connections\"},\"AuthAttempt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"smtpUserId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"smtp_user_id\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remoteAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"remote_address\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"smtpUser\",\"kind\":\"object\",\"type\":\"SmtpUser\",\"relationName\":\"AuthAttemptToSmtpUser\"}],\"dbName\":\"auth_attempts\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

