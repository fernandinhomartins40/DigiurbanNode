{
  "permissions": {
    "allow": [
      "mcp__ide__getDiagnostics",
      "Bash(npm run lint)",
      "Bash(npm install)",
      "Bash(npx tsc:*)",
      "Bash(npm test:*)",
      "Bash(npm run build:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(node:*)",
      "Bash(npx supabase:*)",
      "Bash(del:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(ssh:*)",
      "Bash(nslookup:*)",
      "Bash(dir:*)",
      "Bash(npm cache clean:*)",
      "Bash(curl:*)",
      "Bash(exit)",
      "Bash(git reset:*)",
      "Bash(npm run lint:*)",
      "Bash(service:*)",
      "Bash(touch:*)",
      "Bash(git rm:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(psql:*)",
      "Bash(systemctl:*)",
      "Bash(pm2 list:*)",
      "WebFetch(domain:digiurban.com.br)",
      "mcp__ide__executeCode",
      "WebFetch(domain:ultrabase.com.br)",
      "Bash(npx -y @ultrabase/mcp-server create-supabase-instance:*)",
      "Bash(npx:*)",
      "Bash(copy schema_completo_fase4.sql 01_schema_completo_fase4.sql)",
      "Bash(cp:*)",
      "Bash(ss:*)",
      "Bash(git merge:*)",
      "Bash(git pull origin main)",
      "Bash(git checkout:*)",
      "WebSearch",
      "Bash(copy:*)",
      "Bash(chmod:*)",
      "Bash(git branch:*)",
      "Bash(bash:*)",
      "Bash(dig:*)",
      "Bash(scp:*)",
      "WebFetch(domain:api.github.com)",
      "Bash(mv:*)",
      "Bash(cat:*)",
      "Bash(docker build:*)",
      "Bash(docker:*)",
      "WebFetch(domain:www.ssllabs.com)",
      "WebFetch(domain:www.sslchecker.com)",
      "WebFetch(domain:crt.sh)",
      "WebFetch(domain:apidigiruban.com.br)",
      "Bash(true)",
      "WebFetch(domain:72.60.10.108)",
      "Bash(echo:*)",
      "Bash(for file in AgendaExecutiva.tsx Atendimentos.tsx AuditoriaTransparencia.tsx ComunicacaoOficial.tsx ConfiguracoesSistema.tsx CorreioInterno.tsx DashboardGabinete.tsx OrdensSetores.tsx ProjetosEstrategicos.tsx)",
      "Bash(done)",
      "Bash(git restore:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(fi)",
      "Bash(sqlite3:*)",
      "Bash(for:*)",
      "Bash(do echo \"Migrando: $file\")",
      "Bash(do echo \"Convertendo: $file\")",
      "Bash(do echo \"Migrando service: $file\")",
      "Bash(if grep -q \"supabase\" package.json)",
      "Bash(then echo \"❌ Ainda há dependências Supabase\")",
      "Bash(else echo \"✅ Dependências Supabase removidas\")",
      "Bash(do echo \"Corrigindo: $file\")",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"Corrigindo: $file\")",
      "Bash(then echo \"Processando: $file\")",
      "Bash(do echo \"Finalizando: $file\")",
      "Bash(if grep -q \"supabase\" frontend/package.json)",
      "Bash(else echo \"✅ Nenhuma dependência Supabase\")",
      "Bash(openssl rand:*)",
      "Bash(do sed -i \"s/import { body, param, query } from ''express-validator'';/import expressValidator from ''express-validator'';\\nconst { body, param, query } = expressValidator;/g\" \"$file\")",
      "Bash(timeout 10s npm start)",
      "Bash(timeout 15s npm start)",
      "Bash(/dev/null)",
      "Bash(do)",
      "Bash(taskkill:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(timeout:*)",
      "WebFetch(domain:www.digiurban.com.br)",
      "Bash(npm uninstall:*)",
      "Bash(tsx:*)",
      "Bash(tree:*)",
      "Bash(tasklist)",
      "Bash(./deploy-digiurban.sh:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:\\c\\Users\\fusea\\AppData\\Roaming",
      "C:\\etc\\nginx\\sites-available"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "ultrabase"
  ],
  "mcpServers": {
    "ultrabase": {
      "url": "https://ultrabase.com.br/mcp-api",
      "apiKey": "ultrabase_c813d57ac47d8d30_b0fae0f8f0dc783b2f69605bf4b239d33ea7d438bac69e6d75a1b80c9dd7d283",
      "name": "Ultrabase Supabase Manager",
      "description": "Gerenciamento de instâncias Supabase via MCP"
    }
  }
}